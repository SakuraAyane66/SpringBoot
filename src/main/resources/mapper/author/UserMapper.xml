<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace对应的是mapper/dao层的地址-->
<mapper namespace="com.example.demo.author.mapper.AuthorMapper">
<!--  id对应接口中的抽象方法，parameterType类型（后面肯定会有复杂类型）, resultType返回类型 -->
    <!--查询所有author表记录-->
    <select id="getAll" resultType="com.example.demo.author.domain.Author">
        select * from author;
    </select>
    <!--根据id找对应的Author对象,传入的是author对象-->
    <select id="getAuthorById" parameterType="com.example.demo.author.domain.Author" resultType="com.example.demo.author.domain.Author">
         select
          id,name,user_id,address
        from
          author
        where
          id = #{id};
    </select>
    <!--根据id范围查询所有的地址,按照id顺序排序,因为大于小于要转义-->
    <select id="getAddsByIds" resultType="java.lang.String">
        select address from author where id &lt;=i and &gt;=j;
    </select>
</mapper>